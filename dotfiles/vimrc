" Allow multiple buffers in the same window
set hidden

" Better command-line completion
set wildmenu

" Ensure that we are in modern vim mode, not backwards-compatible vi mode
set nocompatible
set backspace=indent,eol,start
filetype off " required for Vundle plugin manager

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

" vim-c0 plugin on Github repo
Plugin 'cmugpi/vim-c0'

" install gundo
Plugin 'sjl/gundo.vim'

" NERD tree
Plugin 'scrooloose/nerdtree'

" Syntastic
Plugin 'vim-syntastic/syntastic'

" Whitespace
Plugin 'ntpeters/vim-better-whitespace'

" SML stuff???
Plugin 'jez/vim-better-sml'

" Surround
Plugin 'tpope/vim-surround'

" I enjoy looking good
Plugin 'tomtom/quickfixsigns_vim'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'bling/vim-bufferline'

call vundle#end()

" Helpful information: cursor position in bottom right, line numbers on
" left
set ruler
set number

"Enable filetype detection and syntax hilighting
syntax on
filetype on
filetype indent on
filetype plugin on

set tabstop=2
set shiftwidth=2
set expandtab

hi clear SignColumn

" Indent as intelligently as vim knows how
set smartindent

" Show multicharacter commands as they are being typed
set showcmd

" Show 80 character limit line
set colorcolumn=80

" Quickly time out on keycodes, but never time out on mappings
set notimeout ttimeout ttimeoutlen=200

" Map ctrl-arrow to shifting buffers
map <C-Up> :bnext<CR>
map <C-Down> :bprevious<CR>

map <C-O> :NERDTree<CR>

nnoremap gV `[v`]

" ARM assembly syntax
let asmsyntax='armasm'
let filetype_inc='armasm'

" Change leader key
let mapleader=","

" gundo tree
nnoremap <F2> :GundoToggle<CR>

" make and associated convenience
nnoremap <leader>m :make<CR>
nnoremap <C-Right> :cn<CR>
nnoremap <C-Left> :cp<CR>

" Search as characters are entered
set incsearch
" Highlight matches
set hlsearch

" Save
nnoremap <leader>w :w<CR>

" Save session
nnoremap <leader>s :mksession<CR>

" Tab things
nnoremap <Tab> >>
nnoremap <S-Tab> <<

set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

augroup mySyntastic
  " Errors should go into location-list
  au FileType sml let g:syntastic_always_populate_loc_list = 1

  " automatically open/close location-list
  au Filetype sml let g:syntastic_auto_loc_list = 1

  au FileType tex let b:syntastic_mode = "passive"
augroup END

" Toggle syntax checking
nnoremap <Leader>t :SyntasticToggleMode<CR>

" Let's not leave swap files cluttering everything while just perusing with
" gvim, shall we?
if has("gui_running")
  set noswapfile
  set nobackup
  set nowritebackup
endif

" Enable statusbar
set laststatus=2

set mouse=a

let g:airline_theme='simple'
let g:bufferline_echo=0
set noshowmode

